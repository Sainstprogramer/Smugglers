#version 400 core

in vec3 position;
in vec2 texturecoords;
in vec3 normal;

out vec2 outtexturecoords;
out vec3 surfacenormal;
out vec3 tolightvector[4];

uniform mat4 transmat;
uniform mat4 rotmat;
uniform mat4 viewrotmat;
uniform mat4 viewposmat;
uniform mat4 projmat;
uniform vec3 warpingpoint;
uniform vec3 lightpos[4];
uniform float warpingRange;
uniform float warpingStrength;

void main(void){
	
	mat4 transform=transmat*rotmat;
	mat4 viewmat=viewrotmat*viewposmat;
	
	vec4 worldpos=transform*vec4(position,1.0);
	
	float dist=length(worldpos-warpingpoint);
	
	float warp=(dist/warpingStrength)/warpingRange;
	
	if(dist>warpingRange){
	warp=dist/warpingRange;
	}
	
	if(warp>1){
	warp=1;
	}
	
	
	
	float finalwarp=(warp*warp);
	
	vec3 warpeff=vec3(finalwarp,finalwarp,finalwarp);
	
	vec3 scaledpos=warpeff*position;
	
	worldpos=transform*vec4(scaledpos,1.0);
	
	gl_Position=projmat *viewmat*worldpos;
	outtexturecoords=texturecoords;
	
	surfacenormal=(transform*vec4(normal,0.0)).xyz;
	for(int i=0;i<4;i++){
		tolightvector[i]=(vec4(lightpos[i],0.0) - worldpos).xyz;
	}
	
	
	
}